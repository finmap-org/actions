name: Update Histogram Datafiles
description: Composite GitHub Action

inputs:
  repo:
    description: "Repository path relative to workspace"
    required: true
  start_date:
    description: "Start date in YYYY/MM/DD format"
    required: true
  end_date:
    description: "End date in YYYY/MM/DD format"
    required: true
  max_jobs:
    description: "Maximum concurrent date workers"
    required: false
    default: "10"

runs:
  using: composite
  steps:
    - name: Update Histogram Datafiles
      shell: bash
      env:
        REPO: ${{ inputs.repo }}
        START_DATE: ${{ inputs.start_date }}
        END_DATE: ${{ inputs.end_date }}
        MAX_JOBS: ${{ inputs.max_jobs }}
      run: |
        set -euo pipefail
        shopt -s nullglob

        WORKSPACE="${{ github.workspace }}"
        MARKETDATA_ROOT="$WORKSPACE/$REPO/marketdata"
        HISTORY_DIR="$WORKSPACE/$REPO/history"
        mkdir -p "$HISTORY_DIR"

        TMPDIR=$(mktemp -d)
        trap 'rm -rf "$TMPDIR"' EXIT

        start_seconds=$(date -d "$START_DATE" +%s)
        end_seconds=$(date -d "$END_DATE" +%s)

        process_date() {
          local date_slash="$1"
          local date_iso="${date_slash//\//-}"
          local data_dir="$MARKETDATA_ROOT/$date_slash"
          
          [[ -d "$data_dir" ]] || return 0
          
          for file in "$data_dir"/*.json; do
            [[ -f "$file" ]] || continue
            local exchange=$(basename "$file" .json)
            local outfile="$TMPDIR/${exchange}__${date_iso}.json"
            
            jq -c --arg d "$date_iso" '
              {
                dates: [$d]
              } + (reduce (.securities.data[]? | select(.[2]=="sector")) as $s ({}; . + { (if $s[3] != "" then $s[7] else "Market Totals" end): {
                volume: [($s[14] // 0)],
                value: [($s[15] // 0)],
                tradesNumber: [($s[16] // 0)],
                marketCap: [($s[17] // 0)],
                itemsNumber: [($s[23] // 0)]
              }}))
            ' "$file" > "$outfile"
          done
        }

        export -f process_date
        export MARKETDATA_ROOT TMPDIR

        date_list=()
        current_seconds=$start_seconds
        while [ $current_seconds -le $end_seconds ]; do
          dow=$(date -d "@$current_seconds" +%u)
          if [ "$dow" -lt 6 ]; then
            date_list+=("$(date -d "@$current_seconds" +%Y/%m/%d)")
          fi
          current_seconds=$((current_seconds + 86400))
        done

        printf '%s\n' "${date_list[@]}" | xargs -P "$MAX_JOBS" -I {} bash -c 'process_date "$@"' _ {}

        wait

        declare -A exchange_files
        for file in "$TMPDIR"/*.json; do
          [[ -f "$file" ]] || continue
          exchange="${file##*/}"
          exchange="${exchange%%__*}"
          exchange_files["$exchange"]=1
        done

        for exchange in "${!exchange_files[@]}"; do
          (
            files=()
            if [ -f "$HISTORY_DIR/$exchange.json" ]; then
              files+=("$HISTORY_DIR/$exchange.json")
            fi
            
            for f in "$TMPDIR/${exchange}__"*.json; do
              [[ -f "$f" ]] && files+=("$f")
            done
            
            [ ${#files[@]} -eq 0 ] && exit 0
            
            jq -s '
              reduce .[] as $item (
                {};
                .dates = ((.dates // []) + ($item.dates // [])) | unique | sort
                | ($item | keys_unsorted[] | select(. != "dates")) as $k
                | .[$k] = {
                    volume: ((.[$k].volume // []) + ($item[$k].volume // [])),
                    value: ((.[$k].value // []) + ($item[$k].value // [])),
                    tradesNumber: ((.[$k].tradesNumber // []) + ($item[$k].tradesNumber // [])),
                    marketCap: ((.[$k].marketCap // []) + ($item[$k].marketCap // [])),
                    itemsNumber: ((.[$k].itemsNumber // []) + ($item[$k].itemsNumber // []))
                  }
              )
            ' "${files[@]}" > "$HISTORY_DIR/$exchange.json.tmp"
            
            mv "$HISTORY_DIR/$exchange.json.tmp" "$HISTORY_DIR/${exchange}-test.json"
          ) &
        done

        wait